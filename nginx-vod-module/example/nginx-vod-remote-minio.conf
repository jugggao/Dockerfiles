user root;
worker_processes auto;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    upstream media {
        server minio-internal.oook.cn;
    }

    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $bytes_sent $request_time "$http_referer" "$http_user_agent" "-" - '
    '"$sent_http_x_kaltura" "$http_host" $pid $sent_http_x_kaltura_session - '
    '$request_length "$sent_http_content_range" "$http_x_forwarded_for" '
    '"$http_x_forwarded_server" "$http_x_forwarded_host" "$sent_http_cache_control" '
    '$connection ';

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 60;
    keepalive_requests 1000;
    client_header_timeout 20;
    client_body_timeout 20;
    reset_timedout_connection on;
    send_timeout 20;

    gzip on;
    gzip_types application/vnd.apple.mpegurl video/f4m application/dash+xml text/xml;

    vod_mode remote;
    vod_upstream_location /media_proxy;

    server {
        listen 80;
        server_name vod-b.oook.cn vod.oook.cn;

        vod_last_modified 'Sun, 19 Nov 2000 08:52:00 GMT';
        vod_last_modified_types *;
        vod_segment_duration 2000; # 2s
        vod_align_segments_to_key_frames on;
        open_file_cache max=1000 inactive=5m;
        open_file_cache_valid 500m;
        open_file_cache_min_uses 1;
        open_file_cache_errors on;
        gzip on;
        gzip_types application/x-mpegURL;

        # vod caches
        vod_metadata_cache metadata_cache 1000m;
        vod_response_cache response_cache 128m;

        aio on;

        location /actuator/health {
            add_header Content-Type "text/plain;charset=utf-8";
            return 200 "ok";
        }

        location ~ /media_proxy/[^/]+/(.*) {
            internal;
            proxy_pass http://media/oook/$1;
            proxy_http_version 1.1;
            proxy_set_header Host minio-internal.oook.cn;
            proxy_set_header Connection "";
        }

        location /pd/ {
            vod none;
            directio 512;
            output_buffers 1 512k;
            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            add_header Access-Control-Allow-Origin '*';
        }

        location /vod/ {
            vod hls;
            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            add_header Access-Control-Allow-Origin '*';
            expires -1;
        }

        location /video/ {
            vod none;
            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            expires -1;
        }

        location /thumb/ {
            vod thumb;
            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            add_header Access-Control-Allow-Origin '*';
            expires -1;
        }

        location /hls/ {
            vod_mode local;
            open_file_cache off;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            alias /data/hls;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # This URL provides RTMP statistics in XML
        location /stat {
            rtmp_stat all;
            root /data/xsl;
            rtmp_stat_stylesheet stat.xsl; # Use stat.xsl stylesheet
        }

        location /stat.xsl {
            # XML stylesheet to view RTMP stats.
            root /data/xsl;
        }
    }
}

# RTMP configuration
# Configuration reference: https://github.com/arut/nginx-rtmp-module/wiki/Directives
rtmp {
    server {
        listen 1935;
        chunk_size 4000;
        application live {
            live on;
            dash on;
            dash_path /data/dash;

            hls on;
            hls_variant _low BANDWIDTH=288000;
            hls_variant _mid BANDWIDTH=448000;
            hls_variant _high BANDWIDTH=1152000;
            hls_variant _hd720 BANDWIDTH=2048000;
            hls_variant _src BANDWIDTH=4096000;

            hls_cleanup on;
            hls_sync 100ms;
            hls_fragment 2s;
            hls_playlist_length 300m;
            hls_path /data/hls;

            record off;
            record_path /data/rec;
            record_suffix _%Y-%m-%d_%H-%M-%S.flv;
            record_lock on;
        }
    }
}
